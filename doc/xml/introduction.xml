<?xml version="1.0"?> <!-- -*- sgml -*- -->
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<chapter id="introduction" xreflabel="Introduction">
<title>Introduction</title>

<sect1 id="overview" xreflabel="An Overview of Valkyrie">
<title>An Overview of Valkyrie</title>

<para>Valkyrie is a graphical front-end to the Valgrind suite of tools for 
debugging and profiling Linux executables.  The current version supports
Valgrind from version 3.3.0.  Currently, the only supported Valgrind tool
is Memcheck.</para>

<para>Valkyrie uses the Qt widget library, and should run on most reasonably 
recent Linux setups.  The only sine qua non is that you must have:</para>
<itemizedlist mark='bullet'>
  <listitem><para>Qt v.3.2.0 or higher (but not Qt v.4 as yet), 
  and</para></listitem>
  <listitem><para>Valgrind v.3.3.0 or higher.</para></listitem>
</itemizedlist>


<para>Valkyrie also contains a program <command>vk_logmerge</command>.
Given multiple log files (in xml format) generated by multiple runs on 
a parallel machine, or multiple log files generated by sequential runs
on a single-processor machine, for the same binary,
<command>vk_logmerge</command> merges the log files together, summing
the counts of duplicates, and outputs the result to a single file.
As input, <command>vk_logmerge</command> expects the log-files
to-be-merged and/or a file containing the list of log-files to-be-merged,
with each entry on a separate line.
Log files can be merged from within Valkyrie, or you can use it in 
non-gui mode by invoking it thusly:</para>
<programlisting><![CDATA[
  vk_logmerge -f <log-file-list> [-o <output-file>]
]]></programlisting>
<programlisting><![CDATA[
  vk_logmerge log1.xml log2.xml [-o <output-file>]
]]></programlisting>

<para>Issue the command:</para>
<programlisting>
  valkyrie -h | --help
</programlisting>
<para>to see a list of command-line flags.</para>

<para>Valkyrie can be started with flags on the command-line.  
Below are some examples of common usage.</para>

<itemizedlist>

  <listitem>
    <para><computeroutput>valkyrie --view-log=log.xml</computeroutput></para>
    <para>will start up the graphical user interface, with 
    <emphasis>log-file-to-view</emphasis> in the process of being loaded.</para>
  </listitem>

  <listitem>
    <para><computeroutput>valkyrie --merge=tomerge.loglst</computeroutput></para>
    <para>will start up the user interface, with <emphasis>log-file-list</emphasis>
    in the process of being merged.</para>
  </listitem>

  <listitem>
    <para><computeroutput>valkyrie /bin/ls -lF</computeroutput></para>
    <para>will start up the user interface.  This command differs from the 
    above two in that Valgrind is being called to run the executable 
    <emphasis>ls</emphasis>.  Currently only Memcheck is supported, so
    this is the tool used on the executable.</para>
  </listitem>

  <listitem>
    <para>You can give many of the Valgrind flag(s) on the command line:</para>
    <para><computeroutput>valkyrie --smc-check=none --pointercheck=yes /bin/ls -lF</computeroutput></para>
    <para>Some options are currently disabled, however, as Valgrind presets these
    options when producing XML output, which Valkyrie requires.  Valkyrie
    also disables options that would interfere with the gathering of Valgrind's
    output, such as logging options.</para>
  </listitem>

</itemizedlist>

<para>See the <xref linkend="options_dialog"/> pages for more information 
on setting and saving the various flags, options and preferences.</para>

<para>Below is an example screenshot of the result of running
<computeroutput>valkyrie xclock</computeroutput>
</para>

<para>An error is opened up for scrutiny.  If the file in which
the error occurred has read and/or write permissions, and Valgrind was able 
to determine the <emphasis>/path/to/the/file</emphasis>, an icon will be 
displayed. If you have write permission on the file, the icon will show a
pencil; otherwise it will not.  Double-clicking on this icon will launch an 
editor with the file loaded at the line where the error occurred.</para>

<para>If you do not have read and/or write permissions on the file, the error 
will still be displayed, but you will not be able to launch an editor.</para>

<mediaobject id="screenshot-1">
  <imageobject>
    <imagedata fileref="images/screenshot_1.png" format="PNG"/>
  </imageobject>
  <textobject>
    <phrase>An Open Error</phrase>
  </textobject>
</mediaobject>


<para>Just as when running a client program directly under Valgrind,
the client program retains input/output with the terminal in which
Valkyrie was started.  You could, for example, run ssh under Valkryie:<br/>
<computeroutput>valkyrie ssh hostname</computeroutput><br/>
and all input/output should pass through transparently.
Any output from Valkyrie (for example if an error occured) is
prefixed by "===valkyrie:pid===".</para>

</sect1>



<sect1 id="intro.why_valkyrie" xreflabel="Why 'Valkyrie' ">
<title>Why Valkyrie is thusly named</title>

<para>The term "Valkyrie" has its origins in Nordic myth. The Valkyries 
were warrior maidens who attended Odin, ruler of the gods. They rode 
through the air wearing brilliant armour, directed and oversaw the 
battles of the Norsemen (Vikings), and distributed death lots among the 
warriors. When warriors perished, the Valkyries conducted the bravest 
souls to the great hall of Odin, Valhalla (Hall of the Slain), which 
was the foremost resting place in Asgard (the Place of the Nordic 
Gods).</para>

<para>Since "Valgrind" is the name of the Gate to Valhalla (see the 
<ulink url="http://www.valgrind.org/docs/manual/faq.html#faq.whence">Valgrind FAQ</ulink>) 
through which the warriors deemed worthy of entry pass, and the warriors 
are accompanied by Valkyries ...</para>

</sect1>

</chapter>

